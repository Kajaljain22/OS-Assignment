#include<stdio.h>
#include<conio.h>
int main()
{
    int n1,n2,i,tq;
    int totaltime=0;
    int time=0;
    int arr_time[n1],burst_time[n1],priority[n1];
    printf("Enter number of processes in Queue 1");//Priority Scheduling
    scanf("%d",&n1);
    for(i=0;i<n1;i++)
    {
            printf("Process",i+1);
            printf("\nEnter arrival time");
            scanf("%d",&arr_time[i]);
            printf("\nEnter burst time");
            scanf("%d",&burst_time[i]);
            printf("\nEnter priority");
            scanf("%d",&priority[i]);
    }
    printf("Enter number of processes in Queue 2");//Round Robin Scheduling
    scanf("%d",&n2);
    printf("Enter time quantum");
    scanf("%d",&tq);
    int arr_time2[n2],burst_time2[n2],priority2[n2];
    for(i=0;i<n2;i++)
    {
            printf("Process",i+1);
            printf("\nEnter arrival time");
            scanf("%d",&arr_time2[i]);
            printf("\nEnter burst time");
            scanf("%d",&burst_time2[i]);
            printf("\nEnter priority");
            scanf("%d",&priority2[i]);
    }
    int count=tq;
    int j=0;
    int val=max(burst_time2);
    while(val>0)
    {
                for(j=0;j<n2;j++)
                {
                   if(arr_time2[j]>time)
                   {
                   }
                   else
                   {
                     if(burst_time2[j]>tq)
                     {
                        burst_time2[j]=burst_time2[j]-count;
                        count=tq;
                     } 
                     else
                     { 
                        count=burst_time2[j];
                        burst_time2[j]=0;
                        
                     }
                     totaltime+=burst_time2[j];
                     time+=count;
                   }
                }
                val=max(burst_time2);
    }
    getch();
}
